{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/PC/Desktop/zidonghua/project/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/PC/Desktop/zidonghua/project/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.string.pad-start.js\";\nimport \"core-js/modules/es.string.trim.js\";\nimport axios from 'axios';\nexport default {\n  name: 'ChatWindow',\n  data: function data() {\n    return {\n      messages: [],\n      userInput: ''\n    };\n  },\n  methods: {\n    sendMessage: function sendMessage() {\n      var _this = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var timestamp, response;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              if (!(_this.userInput.trim() === '')) {\n                _context.next = 2;\n                break;\n              }\n              return _context.abrupt(\"return\");\n            case 2:\n              timestamp = new Date();\n              _this.messages.push({\n                type: 'user',\n                content: _this.userInput,\n                timestamp: timestamp\n              });\n              _context.prev = 4;\n              _context.next = 7;\n              return axios.post('http://localhost:5000/chat', {\n                message: _this.userInput\n              });\n            case 7:\n              response = _context.sent;\n              _this.messages.push({\n                type: 'ai',\n                content: response.data.reply,\n                timestamp: new Date()\n              });\n              _context.next = 15;\n              break;\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](4);\n              console.error('Error:', _context.t0);\n              _this.messages.push({\n                type: 'error',\n                content: 'Êä±Ê≠â,Âá∫Áé∞‰∫Ü‰∏Ä‰∏™ÈîôËØØ„ÄÇ',\n                timestamp: new Date()\n              });\n            case 15:\n              _this.userInput = '';\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[4, 11]]);\n      }))();\n    },\n    goBack: function goBack() {\n      // ÂÆûÁé∞ËøîÂõûÈÄªËæë\n    },\n    showTimestamp: function showTimestamp(index) {\n      if (index === 0) return true;\n      var prevMessage = this.messages[index - 1];\n      var currentMessage = this.messages[index];\n      return new Date(currentMessage.timestamp) - new Date(prevMessage.timestamp) > 300000; // 5ÂàÜÈíü\n    },\n    formatTimestamp: function formatTimestamp(timestamp) {\n      var date = new Date(timestamp);\n      return \"\".concat(date.getMonth() + 1, \"\\u6708\").concat(date.getDate(), \"\\u65E5 \").concat(date.getHours().toString().padStart(2, '0'), \":\").concat(date.getMinutes().toString().padStart(2, '0'));\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","messages","userInput","methods","sendMessage","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","timestamp","response","wrap","_callee$","_context","prev","next","trim","abrupt","Date","push","type","content","post","message","sent","reply","t0","console","error","stop","goBack","showTimestamp","index","prevMessage","currentMessage","formatTimestamp","date","concat","getMonth","getDate","getHours","toString","padStart","getMinutes"],"sources":["C:\\Users\\PC\\Desktop\\zidonghua\\project\\frontend\\src\\components\\ChatWindow.vue"],"sourcesContent":["<template>\r\n  <v-container class=\"chat-window bg-gray-100 h-screen flex flex-col\">\r\n    <v-app-bar class=\"bg-white\">\r\n      <v-app-bar-nav-icon @click=\"goBack\">\r\n        <v-icon>mdi-arrow-left</v-icon>\r\n      </v-app-bar-nav-icon>\r\n      <v-toolbar-title>ÂøÖË¶Å-ËÆ∏ÊÑøÁÆ°ÂÆ∂ ü•£Libra</v-toolbar-title>\r\n      <v-spacer></v-spacer>\r\n      <v-btn icon>\r\n        <v-icon>mdi-dots-vertical</v-icon>\r\n      </v-btn>\r\n    </v-app-bar>\r\n\r\n    <v-main class=\"flex-grow overflow-y-auto px-4 py-2\">\r\n      <div v-for=\"(message, index) in messages\" :key=\"index\" class=\"mb-4\">\r\n        <div class=\"text-xs text-gray-500 text-center mb-1\" v-if=\"showTimestamp(index)\">\r\n          {{ formatTimestamp(message.timestamp) }}\r\n        </div>\r\n        <div :class=\"['flex', message.type === 'user' ? 'justify-end' : 'justify-start']\">\r\n          <div :class=\"['max-w-3/4 p-3 rounded-lg', \r\n            message.type === 'user' ? 'bg-blue-500 text-white' : 'bg-white']\">\r\n            {{ message.content }}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </v-main>\r\n\r\n    <v-footer class=\"bg-white\">\r\n      <v-text-field\r\n        v-model=\"userInput\"\r\n        placeholder=\"ËØ∑ËæìÂÖ•ÊÇ®ÁöÑÊ∂àÊÅØ...\"\r\n        append-icon=\"mdi-send\"\r\n        @click:append=\"sendMessage\"\r\n        @keyup.enter=\"sendMessage\"\r\n        hide-details\r\n        dense\r\n        outlined\r\n        class=\"mr-2\"\r\n      ></v-text-field>\r\n      <v-btn icon>\r\n        <v-icon>mdi-emoticon-outline</v-icon>\r\n      </v-btn>\r\n      <v-btn icon>\r\n        <v-icon>mdi-plus</v-icon>\r\n      </v-btn>\r\n    </v-footer>\r\n  </v-container>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n  name: 'ChatWindow',\r\n  data() {\r\n    return {\r\n      messages: [],\r\n      userInput: ''\r\n    }\r\n  },\r\n  methods: {\r\n    async sendMessage() {\r\n      if (this.userInput.trim() === '') return\r\n\r\n      const timestamp = new Date()\r\n      this.messages.push({ type: 'user', content: this.userInput, timestamp })\r\n\r\n      try {\r\n        const response = await axios.post('http://localhost:5000/chat', { message: this.userInput })\r\n        this.messages.push({ type: 'ai', content: response.data.reply, timestamp: new Date() })\r\n      } catch (error) {\r\n        console.error('Error:', error)\r\n        this.messages.push({ type: 'error', content: 'Êä±Ê≠â,Âá∫Áé∞‰∫Ü‰∏Ä‰∏™ÈîôËØØ„ÄÇ', timestamp: new Date() })\r\n      }\r\n\r\n      this.userInput = ''\r\n    },\r\n    goBack() {\r\n      // ÂÆûÁé∞ËøîÂõûÈÄªËæë\r\n    },\r\n    showTimestamp(index) {\r\n      if (index === 0) return true\r\n      const prevMessage = this.messages[index - 1]\r\n      const currentMessage = this.messages[index]\r\n      return new Date(currentMessage.timestamp) - new Date(prevMessage.timestamp) > 300000 // 5ÂàÜÈíü\r\n    },\r\n    formatTimestamp(timestamp) {\r\n      const date = new Date(timestamp)\r\n      return `${date.getMonth() + 1}Êúà${date.getDate()}Êó• ${date.getHours().toString().padStart(2, '0')}:${date.getMinutes().toString().padStart(2, '0')}`\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.chat-window {\r\n  width: 400px;\r\n  margin: 0 auto;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n}\r\n\r\n.messages {\r\n  height: 300px;\r\n  overflow-y: auto;\r\n  padding: 10px;\r\n}\r\n\r\n.user, .ai, .error {\r\n  margin-bottom: 10px;\r\n  padding: 5px;\r\n  border-radius: 5px;\r\n}\r\n\r\n.user {\r\n  background-color: #e6f3ff;\r\n  text-align: right;\r\n}\r\n\r\n.ai {\r\n  background-color: #f0f0f0;\r\n  text-align: left;\r\n}\r\n\r\n.error {\r\n  background-color: #ffe6e6;\r\n  text-align: center;\r\n}\r\n\r\n.input-area {\r\n  display: flex;\r\n  padding: 10px;\r\n}\r\n\r\ninput {\r\n  flex-grow: 1;\r\n  padding: 5px;\r\n}\r\n\r\nbutton {\r\n  margin-left: 10px;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}