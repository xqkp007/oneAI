{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/PC/Desktop/zidonghua/project/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/PC/Desktop/zidonghua/project/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.string.pad-start.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.string.trim.js\";\nimport axios from 'axios';\nexport default {\n  name: 'ChatWindow',\n  data: function data() {\n    return {\n      messages: [],\n      userInput: '',\n      isAiThinking: false\n    };\n  },\n  methods: {\n    sendMessage: function sendMessage() {\n      var _this = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var timestamp, userInput, response;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              if (!(_this.userInput.trim() === '' || _this.isAiThinking)) {\n                _context.next = 2;\n                break;\n              }\n              return _context.abrupt(\"return\");\n            case 2:\n              timestamp = new Date();\n              _this.messages.push({\n                type: 'user',\n                content: _this.userInput,\n                timestamp: timestamp\n              });\n              _this.isAiThinking = true;\n              userInput = _this.userInput;\n              _this.userInput = '';\n              _context.prev = 7;\n              _context.next = 10;\n              return axios.post('http://10.6.16.151:5000/chat', {\n                message: userInput,\n                user_id: 'default_user'\n              });\n            case 10:\n              response = _context.sent;\n              // 修改这里，使用 response.data.response 而不是 reply\n              _this.messages.push({\n                type: 'ai',\n                content: response.data.response || '抱歉，我没有理解您的意思。',\n                timestamp: new Date()\n              });\n              _context.next = 18;\n              break;\n            case 14:\n              _context.prev = 14;\n              _context.t0 = _context[\"catch\"](7);\n              console.error('Error:', _context.t0);\n              _this.messages.push({\n                type: 'error',\n                content: '抱歉,出现了一个错误。',\n                timestamp: new Date()\n              });\n            case 18:\n              _context.prev = 18;\n              _this.isAiThinking = false;\n              return _context.finish(18);\n            case 21:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[7, 14, 18, 21]]);\n      }))();\n    },\n    goBack: function goBack() {\n      // 实现返回逻辑\n    },\n    showTimestamp: function showTimestamp(index) {\n      if (index === 0) return true;\n      var prevMessage = this.messages[index - 1];\n      var currentMessage = this.messages[index];\n      return new Date(currentMessage.timestamp) - new Date(prevMessage.timestamp) > 300000; // 5分钟\n    },\n    formatTimestamp: function formatTimestamp(timestamp) {\n      var date = new Date(timestamp);\n      return \"\".concat(date.getMonth() + 1, \"\\u6708\").concat(date.getDate(), \"\\u65E5 \").concat(date.getHours().toString().padStart(2, '0'), \":\").concat(date.getMinutes().toString().padStart(2, '0'));\n    },\n    formatMessage: function formatMessage(content) {\n      if (!content) return '';\n      return content.replace(/\\n/g, '<br>');\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","messages","userInput","isAiThinking","methods","sendMessage","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","timestamp","response","wrap","_callee$","_context","prev","next","trim","abrupt","Date","push","type","content","post","message","user_id","sent","t0","console","error","finish","stop","goBack","showTimestamp","index","prevMessage","currentMessage","formatTimestamp","date","concat","getMonth","getDate","getHours","toString","padStart","getMinutes","formatMessage","replace"],"sources":["C:\\Users\\PC\\Desktop\\zidonghua\\project\\frontend\\src\\components\\ChatWindow.vue"],"sourcesContent":["<template>\r\n  <div class=\"chat-window flex flex-col h-screen bg-gradient-to-b from-blue-50 to-blue-100\">\r\n    <header class=\"bg-white p-4 flex items-center shadow-md\">\r\n      <h1 class=\"text-xl font-semibold text-center text-blue-600 flex-grow\">必要-许愿管家 🥣Libra</h1>\r\n    </header>\r\n\r\n    <main class=\"flex-grow overflow-y-auto p-4\">\r\n      <div v-for=\"(message, index) in messages\" :key=\"index\" class=\"mb-4 animate-fade-in\">\r\n        <div v-if=\"showTimestamp(index)\" class=\"text-xs text-gray-400 text-center mb-2\">\r\n          {{ formatTimestamp(message.timestamp) }}\r\n        </div>\r\n        <div :class=\"['flex', message.type === 'user' ? 'justify-end' : 'justify-start']\">\r\n          <div v-if=\"message.type !== 'user'\" class=\"w-10 h-10 rounded-full mr-2 flex-shrink-0 shadow-md overflow-hidden\">\r\n            <img src=\"/xuyuan.jpg\" alt=\"AI\" class=\"w-full h-full object-cover\">\r\n          </div>\r\n          <div :class=\"['max-w-3/4 p-3 rounded-lg shadow-lg', \r\n            message.type === 'user' ? 'bg-gradient-to-r from-blue-500 to-blue-600 text-white' : 'bg-white text-gray-800']\">\r\n            <div v-html=\"formatMessage(message.content)\" class=\"break-words\"></div>\r\n          </div>\r\n          <div v-if=\"message.type === 'user'\" class=\"w-10 h-10 rounded-full bg-gray-200 ml-2 flex-shrink-0 shadow-md overflow-hidden\">\r\n            <img src=\"/user-avatar.png\" alt=\"User\" class=\"w-full h-full object-cover\">\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </main>\r\n\r\n    <footer class=\"bg-white p-4 shadow-md\">\r\n      <div class=\"max-w-3xl mx-auto flex items-center\">\r\n        <input\r\n          v-model=\"userInput\"\r\n          type=\"text\"\r\n          placeholder=\"请输入您的消息...\"\r\n          class=\"flex-grow p-3 border rounded-l-full focus:outline-none focus:ring-2 focus:ring-blue-300 transition-all duration-300\"\r\n          @keyup.enter=\"sendMessage\"\r\n        />\r\n        <button\r\n          @click=\"sendMessage\"\r\n          class=\"bg-blue-500 text-white p-3 rounded-r-full hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-300 transition-all duration-300\"\r\n        >\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 19l9 2-9-18-9 18 9-2zm0 0v-8\" />\r\n          </svg>\r\n        </button>\r\n      </div>\r\n    </footer>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n  name: 'ChatWindow',\r\n  data() {\r\n    return {\r\n      messages: [],\r\n      userInput: '',\r\n      isAiThinking: false\r\n    }\r\n  },\r\n  methods: {\r\n    async sendMessage() {\r\n      if (this.userInput.trim() === '' || this.isAiThinking) return\r\n\r\n      const timestamp = new Date()\r\n      this.messages.push({ type: 'user', content: this.userInput, timestamp })\r\n      this.isAiThinking = true\r\n      const userInput = this.userInput\r\n      this.userInput = ''\r\n\r\n      try {\r\n        const response = await axios.post('http://10.6.16.151:5000/chat', { \r\n          message: userInput,\r\n          user_id: 'default_user'\r\n        })\r\n        // 修改这里，使用 response.data.response 而不是 reply\r\n        this.messages.push({ \r\n          type: 'ai', \r\n          content: response.data.response || '抱歉，我没有理解您的意思。', \r\n          timestamp: new Date() \r\n        })\r\n      } catch (error) {\r\n        console.error('Error:', error)\r\n        this.messages.push({ \r\n          type: 'error', \r\n          content: '抱歉,出现了一个错误。', \r\n          timestamp: new Date() \r\n        })\r\n      } finally {\r\n        this.isAiThinking = false\r\n      }\r\n    },\r\n    goBack() {\r\n      // 实现返回逻辑\r\n    },\r\n    showTimestamp(index) {\r\n      if (index === 0) return true\r\n      const prevMessage = this.messages[index - 1]\r\n      const currentMessage = this.messages[index]\r\n      return new Date(currentMessage.timestamp) - new Date(prevMessage.timestamp) > 300000 // 5分钟\r\n    },\r\n    formatTimestamp(timestamp) {\r\n      const date = new Date(timestamp)\r\n      return `${date.getMonth() + 1}月${date.getDate()}日 ${date.getHours().toString().padStart(2, '0')}:${date.getMinutes().toString().padStart(2, '0')}`\r\n    },\r\n    formatMessage(content) {\r\n      if (!content) return ''\r\n      return content.replace(/\\n/g, '<br>')\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.chat-window {\r\n  width: 750px;\r\n  height: 1334px;\r\n  margin: 0 auto;\r\n  font-family: 'Arial', sans-serif;\r\n}\r\n\r\n.animate-fade-in {\r\n  animation: fadeIn 0.5s ease-out;\r\n}\r\n\r\n@keyframes fadeIn {\r\n  from { opacity: 0; transform: translateY(10px); }\r\n  to { opacity: 1; transform: translateY(0); }\r\n}\r\n\r\n/* 添加响应式设计 */\r\n@media (max-width: 768px) {\r\n  .chat-window {\r\n    width: 100%;\r\n    height: 100vh;\r\n  }\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}